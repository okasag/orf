# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
# marginal effects for ologit at mean
me_ologit <-ocME(ologit, rev.dum = TRUE, digits = 6)
ologit_output <- function(x) {
output_matrix <- matrix(NA, nrow = 1, ncol = 4)
cat("Ologit Marginal Effects: \n\n")
cat("---------------------------------------------------------------------------------", "\n")
for (var_idx in 1:nrow(x$out$ME.1)) {
cat(rownames(x$out$ME.1)[var_idx], "\n")
cat("                    Cat ", "     Effect", "    StdDev", "    tValue ", "   pValue", "     ", "\n")
for (cat_idx in 1:(length(x$out)-1)) {
# generate stars (thanks to:
# http://myowelt.blogspot.com/2008/04/beautiful-correlation-tables-in-r.html)
stars <- ifelse(as.numeric(x$out[[cat_idx]][var_idx, 4]) < .001, "***",
ifelse(as.numeric(x$out[[cat_idx]][var_idx, 4]) < .01, "** ",
ifelse(as.numeric(x$out[[cat_idx]][var_idx, 4]) < .05, "*  ", "   ")))
# print estimates for each category iteratively
output_matrix[1, 1] <- as.numeric(x$out[[cat_idx]][var_idx, 1])
output_matrix[1, 2] <- as.numeric(x$out[[cat_idx]][var_idx, 2])
output_matrix[1, 3] <- as.numeric(x$out[[cat_idx]][var_idx, 3])
output_matrix[1, 4] <- as.numeric(x$out[[cat_idx]][var_idx, 4])
cat("                 |  ", cat_idx, "  |  ") # prit out the categories
cat(format(sprintf("%8.4f", round(output_matrix, 4)), width = 10), stars, "  |  ") # print out the estimates
cat("\n") # break the line
}
}
cat("---------------------------------------------------------------------------------", "\n")
cat("Significance levels correspond to: *** .< 0.01, ** .< 0.05, * .< 0.1 \n")
cat("---------------------------------------------------------------------------------", "\n")
}
ologit_output(me_ologit)
# load orf
library(orf)
# estimate with polr
library(MASS)
library(erer)
# set wd
setwd("/home/okasag/Documents/HSG/ORF/real_data_app")
source("~/Documents/HSG/ORF/real_data_app/marginal_effects/output_logit.R")
source("~/Documents/HSG/ORF/real_data_app/marginal_effects/output_ologit.R")
### 1. WINE DATA
load("~/Documents/HSG/ORF/data/winequality_dataset_rdata.Rdata")
# prepare data
dataset$y <- as.numeric(dataset$y)
X <- as.matrix(dataset[, 1:ncol(dataset)-1])
Y <- as.matrix(dataset[, ncol(dataset)])
# prepare parameters
ntree <- 2000
# prepare parameters
ntree <- 10000
mtry <- ceiling(sqrt(ncol(X)))
nmin <- 5
honesty <- TRUE
inference <- FALSE
margins <- TRUE
# estimate orf in first place
set.seed(3192) # put your birthday here
system.time(
orf_model <- orf(X,Y,ntree,mtry,nmin,honesty,inference,margins))
200/60
orf_model$honestRPS
orf_model$honestMSE
orf_model$marginalEffects
rowSums(orf_model$marginalEffects)
orf_model$forestInfo$inputs$inference <- TRUE
system.time(
orf_mean_me <- margins(orf_model, eval = "atmean", NULL))
print(orf_mean_me)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
# marginal effects for ologit at mean
me_ologit <-ocME(ologit, rev.dum = TRUE, digits = 6)
ologit_output(me_ologit)
devtools::document()
devtools::check()
library(orf)
# load orf
library(orf)
# estimate with polr
library(MASS)
library(erer)
# set wd
setwd("/home/okasag/Documents/HSG/ORF/real_data_app")
source("~/Documents/HSG/ORF/real_data_app/marginal_effects/output_ologit.R")
### 1. WINE DATA
load("~/Documents/HSG/ORF/data/winequality_dataset_rdata.Rdata")
# prepare data
dataset$y <- as.numeric(dataset$y)
X <- as.matrix(dataset[, 1:ncol(dataset)-1])
Y <- as.matrix(dataset[, ncol(dataset)])
# prepare parameters
ntree <- 10000
# prepare parameters
ntree <- 2000
mtry <- ceiling(sqrt(ncol(X)))
nmin <- 3
honesty <- TRUE
inference <- FALSE
margins <- TRUE
# estimate orf in first place
set.seed(3192) # put your birthday here
system.time(
orf_model <- orf(X,Y,ntree,mtry,nmin,honesty,inference,margins))
orf_model$forestInfo$inputs$inference <- TRUE
system.time(
orf_mean_me <- margins(orf_model, eval = "atmean", NULL))
print(orf_mean_me)
devtools::document()
devtools::check()
library(orf)
# load orf
library(orf)
# estimate with polr
library(MASS)
library(erer)
# set wd
setwd("/home/okasag/Documents/HSG/ORF/real_data_app")
source("~/Documents/HSG/ORF/real_data_app/marginal_effects/output_ologit.R")
# get data
### 1. WINE DATA
load("~/Documents/HSG/ORF/data/winequality_dataset_rdata.Rdata")
# prepare data
dataset$y <- as.numeric(dataset$y)
X <- as.matrix(dataset[, 1:ncol(dataset)-1])
Y <- as.matrix(dataset[, ncol(dataset)])
# prepare parameters
ntree <- 2000
mtry <- ceiling(sqrt(ncol(X)))
nmin <- 5
honesty <- TRUE
inference <- FALSE
margins <- TRUE
# estimate orf in first place
set.seed(3192) # put your birthday here
system.time(
orf_model <- orf(X,Y,ntree,mtry,nmin,honesty,inference,margins))
orf_model$forestInfo$inputs$inference <- TRUE
system.time(
orf_mean_me <- margins(orf_model, eval = "atmean", NULL))
orf_mean_me
orf_model$marginalEffects
round(orf_model$marginalEffects, 4)
round(orf_mean_me$MarginalEffects, 4)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
# marginal effects for ologit at mean
me_ologit <-ocME(ologit, rev.dum = TRUE, digits = 6)
ologit_output(me_ologit)
round(orf_model$marginalEffects, 4)
round(orf_mean_me$MarginalEffects, 4)
round(me_ologit$out$ME.all, 4)
devtools::document()
devtools::check()
library(orf)
# load orf
library(orf)
# estimate with polr
library(MASS)
library(erer)
# set wd
setwd("/home/okasag/Documents/HSG/ORF/real_data_app")
source("~/Documents/HSG/ORF/real_data_app/marginal_effects/output_ologit.R")
# get data
### 1. WINE DATA
load("~/Documents/HSG/ORF/data/winequality_dataset_rdata.Rdata")
# prepare data
dataset$y <- as.numeric(dataset$y)
X <- as.matrix(dataset[, 1:ncol(dataset)-1])
Y <- as.matrix(dataset[, ncol(dataset)])
# prepare parameters
# prepare parameters
ntree <- 5000
mtry <- ceiling(sqrt(ncol(X)))
nmin <- 5
honesty <- TRUE
inference <- FALSE
margins <- TRUE
# estimate orf in first place
set.seed(3192) # put your birthday here
system.time(
orf_model <- orf(X,Y,ntree,mtry,nmin,honesty,inference,margins))
orf_model$forestInfo$inputs$inference <- TRUE
system.time(
orf_mean_me <- margins(orf_model, eval = "atmean", NULL))
print(orf_mean_me)
kktko <- capture.output(print(orf_mean_me))
kktko
# export output
cat("ORF margins: Wine Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/orf_wine.txt", sep="n", append=TRUE)
# save output
out <- capture.output(print(orf_mean_me))
# export output
cat("ORF margins: Wine Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/orf_wine.txt", sep="n", append=TRUE)
# export output
cat("ORF margins: Wine Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/orf_wine.txt", sep="\n", append=TRUE)
# export output
cat("ORF margins: Wine Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/orf_wine.txt", sep="\n", append=TRUE)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
# marginal effects for ologit at mean
me_ologit <-ocME(ologit, rev.dum = TRUE, digits = 6)
# save output
out <- capture.output(ologit_output(me_ologit))
# export output
cat("Wine Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/orf/ologit_wine.txt", sep="\n", append=TRUE)
out
# export output
cat("Wine Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/orf/ologit_wine.txt", sep="\n", append=TRUE)
# export output
cat("Wine Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/ologit/ologit_wine.txt", sep="\n", append=TRUE)
# load orf
library(orf)
# estimate with polr
library(MASS)
library(erer)
# set wd
setwd("/home/okasag/Documents/HSG/ORF/real_data_app")
source("~/Documents/HSG/ORF/real_data_app/marginal_effects/output_ologit.R")
# get data
### 1. WINE DATA
load("~/Documents/HSG/ORF/data/winequality_dataset_rdata.Rdata")
# prepare data
dataset$y <- as.numeric(dataset$y)
X <- as.matrix(dataset[, 1:ncol(dataset)-1])
Y <- as.matrix(dataset[, ncol(dataset)])
# prepare parameters
ntree <- 10000
mtry <- ceiling(sqrt(ncol(X)))
nmin <- 3
honesty <- TRUE
inference <- FALSE
margins <- TRUE
# estimate orf in first place
set.seed(3192) # put your birthday here
# estimate model
orf_model <- orf(X,Y,ntree,mtry,nmin,honesty,inference,margins)
orf_model$forestInfo$inputs$inference <- TRUE
# estimate margins
orf_mean_me <- margins(orf_model, eval = "atmean", NULL)
# save output
out <- capture.output(print(orf_mean_me))
# export output
cat("Wine Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/orf/orf_wine.txt", sep="\n", append=FALSE)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
# marginal effects for ologit at mean
me_ologit <-ocME(ologit, rev.dum = TRUE, digits = 6)
# save output
out <- capture.output(ologit_output(me_ologit))
# export output
cat("Wine Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/ologit/ologit_wine.txt", sep="\n", append=FALSE)
### 2. MAMMOGRAPHY DATA
load("~/Documents/HSG/ORF/data/mammography_dataset_rdata.Rdata")
# prepare data
dataset$SYMPT <- as.numeric(dataset$SYMPT)
dataset$PB <- as.numeric(dataset$PB)
dataset$HIST <- as.numeric(dataset$HIST)
dataset$BSE <- as.numeric(dataset$BSE)
dataset$DECT <- as.numeric(dataset$DECT)
dataset$y <- as.numeric(dataset$y)
# matrices
X <- as.matrix(dataset[, 1:ncol(dataset)-1])
Y <- as.matrix(dataset[, ncol(dataset)])
# prepare parameters
ntree <- 10000
mtry <- ceiling(sqrt(ncol(X)))
nmin <- 3
honesty <- TRUE
inference <- FALSE
margins <- TRUE
# estimate orf in first place
set.seed(3192) # put your birthday here
orf_model <- orf(X,Y,ntree,mtry,nmin,honesty,inference,margins)
orf_model$forestInfo$inputs$inference <- TRUE
orf_mean_me <- margins(orf_model, eval = "atmean", NULL)
# save output
out <- capture.output(print(orf_mean_me))
# export output
cat("Mammography Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/orf/orf_mammography.txt", sep="\n", append=FALSE)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
# marginal effects for ologit at mean
me_ologit <-ocME(ologit, rev.dum = TRUE, digits = 6)
# save output
out <- capture.output(ologit_output(me_ologit))
# export output
cat("Mammography Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/ologit/ologit_mammography.txt", sep="\n", append=FALSE)
### 3. NHANES DATA
load("~/Documents/HSG/ORF/data/nhanes_dataset_rdata.Rdata")
# prepare data
dataset <- as.data.frame(apply(dataset, 2, as.numeric))
# matrices
X <- as.matrix(dataset[, 1:ncol(dataset)-1])
Y <- as.matrix(dataset[, ncol(dataset)])
# prepare parameters
ntree <- 10000
mtry <- ceiling(sqrt(ncol(X)))
nmin <- 3
honesty <- TRUE
inference <- FALSE
margins <- TRUE
# estimate orf in first place
set.seed(3192) # put your birthday here
orf_model <- orf(X,Y,ntree,mtry,nmin,honesty,inference,margins)
orf_model$forestInfo$inputs$inference <- TRUE
orf_mean_me <- margins(orf_model, eval = "atmean", NULL)
# save output
out <- capture.output(print(orf_mean_me))
# export output
cat("Nhanes Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/orf/orf_nhanes.txt", sep="\n", append=FALSE)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
# marginal effects for ologit at mean
me_ologit <-ocME(ologit, rev.dum = TRUE, digits = 6)
# save output
out <- capture.output(ologit_output(me_ologit))
# export output
cat("Nhanes Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/ologit/ologit_nhanes.txt", sep="\n", append=FALSE)
### 4. VLBW DATA
load("~/Documents/HSG/ORF/data/vlbw_dataset_rdata.Rdata")
# prepare data
dataset$race <- as.numeric(dataset$race)
dataset$inout <- as.numeric(dataset$inout)
dataset$delivery <- as.numeric(dataset$delivery)
dataset$sex <- as.numeric(dataset$sex)
# all data
dataset <- as.data.frame(apply(dataset, 2, as.numeric))
# matrices
X <- as.matrix(dataset[, 1:ncol(dataset)-1])
Y <- as.matrix(dataset[, ncol(dataset)])
# prepare parameters
ntree <- 10000
mtry <- ceiling(sqrt(ncol(X)))
nmin <- 3
honesty <- TRUE
inference <- FALSE
margins <- TRUE
# estimate orf in first place
set.seed(3192) # put your birthday here
orf_model <- orf(X,Y,ntree,mtry,nmin,honesty,inference,margins)
orf_model$forestInfo$inputs$inference <- TRUE
orf_mean_me <- margins(orf_model, eval = "atmean", NULL)
# save output
out <- capture.output(print(orf_mean_me))
# export output
cat("Vlbw Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/orf/orf_vlbw.txt", sep="\n", append=FALSE)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
# marginal effects for ologit at mean
me_ologit <-ocME(ologit, rev.dum = TRUE, digits = 6)
# save output
out <- capture.output(ologit_output(me_ologit))
# export output
cat("Vlbw Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/ologit/ologit_vlbw.txt", sep="\n", append=FALSE)
### 5. SUPPORTSTUDY DATA
load("~/Documents/HSG/ORF/data/supportstudy_dataset_rdata.Rdata")
# prepare data
dataset$sex <- as.numeric(dataset$sex)
dataset$dzgroup <- as.numeric(dataset$dzgroup)
dataset$race <- as.numeric(dataset$race)
dataset$y <- as.numeric(dataset$y)
# all data
dataset <- as.data.frame(apply(dataset, 2, as.numeric))
# matrices
X <- as.matrix(dataset[, 1:ncol(dataset)-1])
Y <- as.matrix(dataset[, ncol(dataset)])
# prepare parameters
ntree <- 10000
mtry <- ceiling(sqrt(ncol(X)))
nmin <- 3
honesty <- TRUE
inference <- FALSE
margins <- TRUE
# estimate orf in first place
set.seed(3192) # put your birthday here
orf_model <- orf(X,Y,ntree,mtry,nmin,honesty,inference,margins)
orf_model$forestInfo$inputs$inference <- TRUE
orf_mean_me <- margins(orf_model, eval = "atmean", NULL)
# save output
out <- capture.output(print(orf_mean_me))
# export output
cat("Support Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/orf/orf_support.txt", sep="\n", append=FALSE)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
# marginal effects for ologit at mean
me_ologit <-ocME(ologit, rev.dum = TRUE, digits = 6)
# save output
out <- capture.output(ologit_output(me_ologit))
# export output
cat("Support Dataset", out, file="~/Documents/HSG/ORF/real_data_app/marginal_effects/output/ologit/ologit_support.txt", sep="\n", append=FALSE)
ologit
ologit$method
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
# marginal effects for ologit at mean
me_ologit <-ocME(ologit, rev.dum = TRUE, digits = 6)
# save output
out <- capture.output(ologit_output(me_ologit))
out
me_ologit
### 5. SUPPORTSTUDY DATA
load("~/Documents/HSG/ORF/data/supportstudy_dataset_rdata.Rdata")
# prepare data
dataset$sex <- as.numeric(dataset$sex)
dataset$dzgroup <- as.numeric(dataset$dzgroup)
dataset$race <- as.numeric(dataset$race)
dataset$y <- as.numeric(dataset$y)
# all data
dataset <- as.data.frame(apply(dataset, 2, as.numeric))
# matrices
X <- as.matrix(dataset[, 1:ncol(dataset)-1])
Y <- as.matrix(dataset[, ncol(dataset)])
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
# marginal effects for ologit at mean
me_ologit <-ocME(ologit, rev.dum = TRUE, digits = 6)
me_ologit
# save output
out <- capture.output(ologit_output(me_ologit))
out
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
ologit
# marginal effects for ologit at mean
me_ologit <-ocME(ologit, rev.dum = TRUE, digits = 6)
summary(ologit)
set.seed(1)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
ologit
summary(ologit)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = F)
summary(ologit)
View(dataset)
### 5. SUPPORTSTUDY DATA
load("~/Documents/HSG/ORF/data/supportstudy_dataset_rdata.Rdata")
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
ologit
# marginal effects for ologit at mean
me_ologit <-ocME(ologit, rev.dum = TRUE, digits = 6)
### 5. SUPPORTSTUDY DATA
load("~/Documents/HSG/ORF/data/supportstudy_dataset_rdata.Rdata")
dataset$y <- as.numeric(dataset$y)
# matrices
X <- as.matrix(dataset[, 1:ncol(dataset)-1])
Y <- as.matrix(dataset[, ncol(dataset)])
X
# prepare parameters
ntree <- 10000
mtry <- ceiling(sqrt(ncol(X)))
nmin <- 3
honesty <- TRUE
inference <- FALSE
margins <- FALSE
# estimate orf in first place
set.seed(3192) # put your birthday here
orf_model <- orf(X,Y,ntree,mtry,nmin,honesty,inference,margins)
orf_model
orf_model$forestInfo$trainData
orf_model$forestInfo$inputs$inference <- TRUE
orf_mean_me <- margins(orf_model, eval = "atmean", NULL)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
# marginal effects for ologit at mean
me_ologit <-ocME(ologit, rev.dum = TRUE, digits = 6)
ologit$convergence
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, epsilon = 2)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, tolower() = 2)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, tol = 2)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, maxit = 2)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, maxit = 50)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, control = list(maxit = 2, epsilon=1))
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, control = list(maxit = 2))
ologit
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
ologit
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, control = list(maxit = 20))
ologit
summary(ologit)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, control = list(maxit = 50))
summary(ologit)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, control = list(epsilon = 1e-8, maxit = 50, ep))
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, control = list(epsilon = 1e-8, maxit = 50))
summary(ologit)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, control = list(epsilon = 10, maxit = 50))
summary(ologit)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, control = list(trace=T, maxit = 50))
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, control = list(trace=T))
set.seed(3)
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE, control = list(trace=T))
# ologit
ologit <- polr(as.ordered(y) ~ ., data = dataset, Hess = TRUE)
summary(ologit)
