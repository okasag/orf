% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/orf.R, R/orf_user.R
\docType{package}
\name{orf}
\alias{orf}
\alias{orf-package}
\title{orf: An Implementation of the Ordered Random Forest Algorithm}
\usage{
orf(X, Y, ntree, mtry, nmin, honesty, inference, margins)
}
\arguments{
\item{X}{matrix of features}

\item{Y}{vector of outcomes (as.matrix acceptable too)}

\item{ntree}{scalar, number of trees in a forest, i.e. bootstrap replications}

\item{mtry}{scalar, number of randomly selected features}

\item{nmin}{scalar, minimum node size}

\item{honesty}{logical, if TRUE honest forest is built using 50:50 data split}

\item{inference}{logical, if TRUE the weight based inference is conducted}

\item{margins}{logical, if TRUE marginal effects at mean are estimated}
}
\value{
object of type orf
}
\description{
An Implementation of the Ordered Random Forest Algorithm
as in Lechner & Okasa (2019) and other related estimators for
discrete choice models based on the random forest algorithm.
These include models with ordered, multinomial as well as binary
response. Standard random forest estimator for continuous response
is implemented, too. All the forest based algorithms rely on the
fast C++ forest implementation from the ranger package. Additionally
to common implementations the orf package provides functions for
estimating forest weights as well as marginal effects and thus
provides similar output as in standard econometric models for
ordered choice.

Ordered Random Forests for semi-parametric estimation of ordered choice model
as proposed in Lechner & Okasa (2019)
}
\author{
Gabriel Okasa \email{gabriel.okasa@unisg.ch}
}
