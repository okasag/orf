% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/orf_user.R
\name{predict.orf}
\alias{predict.orf}
\title{predict.orf}
\usage{
\method{predict}{orf}(object, newdata = NULL, type = NULL,
  inference = NULL, ...)
}
\arguments{
\item{object}{estimated forest object of type \code{orf}}

\item{newdata}{matrix X containing the observations for which the outcomes should be predicted}

\item{type}{string specifying the type of the prediction, These can be either "probs" or  "p" for probabilities and "class" or "c" for classes. (Default is "probs").}

\item{inference}{logical, if TRUE variances for the predictions will be estimated (only feasible for probability predictions).}

\item{...}{further arguments (currently ignored)}
}
\value{
object of class \code{orf.prediction} with following elements
      \item{forestInfo}{info containing forest inputs and data used}
      \item{forestPredictions}{predicted values}
      \item{forestVariances}{variances of predicted values}
}
\description{
Prediction for new observations based on estimated ordered random forest
of type \code{orf}
}
\examples{
#\dontrun{

# Ordered Forest
require(orf)

# load example data
data(odata)

# specify response and covariates for train and test
idx <- sample(seq(1, nrow(odata), 1), 0.8*nrow(odata))

# train set
Y_train <- odata[idx, 1]
X_train <- odata[idx, -1]

# test set
Y_test <- odata[-idx, 1]
X_test <- odata[-idx, -1]

# estimate Ordered Forest
set.seed(123)
orf <- orf(X_train, Y_train)

# predict the probabilities with the estimated orf
orf_pred <- predict(orf, newdata = X_test)

# predict the probabilities with estimated orf together with variances
orf_pred <- predict(orf, newdata = X_test, inference = TRUE)

# predict the classes with estimated orf
orf_pred <- predict(orf, newdata = X_test, type = "class")

#}

}
